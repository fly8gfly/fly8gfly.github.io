---
import { onMount } from 'astro/jsx-runtime';
---

<script src="https://unpkg.com/three@0.160.0/build/three.min.js"></script>

<div id="airplane-carousel" class="w-full h-[400px] bg-sky-200"></div>

<script>
  onMount(() => {
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / 400, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ alpha: true });
    const container = document.getElementById('airplane-carousel');
    container.appendChild(renderer.domElement);

    renderer.setSize(window.innerWidth, 400);
    camera.position.z = 10;

    const light = new THREE.AmbientLight(0xffffff, 1);
    scene.add(light);

    const loader = new THREE.TextureLoader();
    function createPlane(path) {
      const texture = loader.load(path);
      const material = new THREE.SpriteMaterial({ map: texture });
      const sprite = new THREE.Sprite(material);
      sprite.scale.set(2, 1, 1);
      scene.add(sprite);
      return sprite;
    }

    const plane1 = createPlane('/planes/plane1.png');
    const plane2 = createPlane('/planes/plane2.png');
    const plane3 = createPlane('/planes/plane3.png');
    const plane4 = createPlane('/planes/plane4.png');

    function orbitPlane(plane, radius, speed, offset = 0) {
      return (t) => {
        const angle = speed * t + offset;
        plane.position.x = Math.cos(angle) * radius;
        plane.position.y = Math.sin(angle) * radius;
      };
    }

    const clock = new THREE.Clock();
    const p1Path = orbitPlane(plane1, 5, 0.5);
    const p2Path = orbitPlane(plane2, 5, -0.4, Math.PI / 2);
    const p3Path = orbitPlane(plane3, 5, 0.6, Math.PI);
    const p4Path = orbitPlane(plane4, 5, -0.3, (3 * Math.PI) / 2);

    function animate() {
      requestAnimationFrame(animate);
      const t = clock.getElapsedTime();
      p1Path(t);
      p2Path(t);
      p3Path(t);
      p4Path(t);
      renderer.render(scene, camera);
    }
    animate();

    window.addEventListener('resize', () => {
      camera.aspect = window.innerWidth / 400;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, 400);
    });
  });
</script>
