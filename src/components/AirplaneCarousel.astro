---
import { onMount } from "solid-js";
---

<style>
  .carousel-container {
    perspective: 1000px;
    width: 100%;
    height: 400px;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }

  .carousel {
    position: relative;
    width: 300px;
    height: 300px;
    transform-style: preserve-3d;
    transition: transform 0.5s ease;
  }

  .cube {
    position: absolute;
    width: 100px;
    height: 100px;
    background: linear-gradient(45deg, #ff7e5f, #feb47b);
    transform-style: preserve-3d;
  }

  /* Position cubes 90Â° apart on a horizontal carousel */
  .cube:nth-child(1) { transform: rotateY(0deg) translateZ(150px); }
  .cube:nth-child(2) { transform: rotateY(90deg) translateZ(150px); }
  .cube:nth-child(3) { transform: rotateY(180deg) translateZ(150px); }
  .cube:nth-child(4) { transform: rotateY(270deg) translateZ(150px); }
</style>

<div class="carousel-container">
  <div class="carousel" id="carousel">
    <div class="cube"></div>
    <div class="cube"></div>
    <div class="cube"></div>
    <div class="cube"></div>
  </div>
</div>

<script>
  let startX = 0;
  let currentRotation = 0;
  let carousel;

  document.addEventListener("DOMContentLoaded", () => {
    carousel = document.getElementById("carousel");

    const rotateCarousel = (deltaX) => {
      currentRotation += deltaX / 2; // drag sensitivity
      carousel.style.transform = `rotateY(${currentRotation}deg)`;
    };

    // Mouse controls
    carousel.addEventListener("mousedown", (e) => {
      startX = e.clientX;
      const onMouseMove = (moveEvent) => {
        rotateCarousel(moveEvent.clientX - startX);
        startX = moveEvent.clientX;
      };
      const onMouseUp = () => {
        document.removeEventListener("mousemove", onMouseMove);
        document.removeEventListener("mouseup", onMouseUp);
      };
      document.addEventListener("mousemove", onMouseMove);
      document.addEventListener("mouseup", onMouseUp);
    });

    // Touch controls
    carousel.addEventListener("touchstart", (e) => {
      startX = e.touches[0].clientX;
    });

    carousel.addEventListener("touchmove", (e) => {
      rotateCarousel(e.touches[0].clientX - startX);
      startX = e.touches[0].clientX;
    });
  });
</script>
