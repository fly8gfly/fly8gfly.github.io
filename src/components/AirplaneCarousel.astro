---
import { onMount } from 'solid-js';

// Dynamically load plane images from /public/planes
const planes = [
  { name: "Plane 1", src: "/planes/plane1.png" },
  { name: "Plane 2", src: "/planes/plane2.png" },
  { name: "Plane 3", src: "/planes/plane3.png" },
  { name: "Plane 4", src: "/planes/plane4.png" }
];
---

<style>
.carousel {
  position: relative;
  width: 400px;
  height: 400px;
  margin: auto;
  perspective: 1200px;
  transform-style: preserve-3d;
  user-select: none;
}

.carousel-track {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
  transition: transform 0.5s ease;
}

.carousel-item {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
  transform-origin: center;
}

.carousel-item img {
  width: 150px;
  height: auto;
  object-fit: contain;
  pointer-events: none;
}
</style>

<div class="carousel" id="carousel">
  <div class="carousel-track" id="carouselTrack">
    {planes.map((plane, index) => (
      <div class="carousel-item"
        style={`transform: rotateY(${index * 90}deg) translateZ(200px)`}>
        <img src={plane.src} alt={plane.name} />
      </div>
    ))}
  </div>
</div>

<script>
  let startX, currentRotation = 0;

  const carouselTrack = document.getElementById("carouselTrack");

  function rotateCarousel(deltaX) {
    const rotationChange = deltaX / 2;
    currentRotation += rotationChange;
    carouselTrack.style.transform = `rotateY(${currentRotation}deg)`;
  }

  document.getElementById("carousel").addEventListener("mousedown", e => {
    startX = e.clientX;
    const onMouseMove = eMove => {
      rotateCarousel(eMove.clientX - startX);
      startX = eMove.clientX;
    };
    const onMouseUp = () => {
      window.removeEventListener("mousemove", onMouseMove);
      window.removeEventListener("mouseup", onMouseUp);
    };
    window.addEventListener("mousemove", onMouseMove);
    window.addEventListener("mouseup", onMouseUp);
  });

  document.getElementById("carousel").addEventListener("touchstart", e => {
    startX = e.touches[0].clientX;
    const onTouchMove = eMove => {
      rotateCarousel(eMove.touches[0].clientX - startX);
      startX = eMove.touches[0].clientX;
    };
    const onTouchEnd = () => {
      window.removeEventListener("touchmove", onTouchMove);
      window.removeEventListener("touchend", onTouchEnd);
    };
    window.addEventListener("touchmove", onTouchMove);
    window.addEventListener("touchend", onTouchEnd);
  });
</script>
