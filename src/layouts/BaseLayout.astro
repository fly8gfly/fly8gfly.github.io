---
const { title = "Fly8G" } = Astro.props;
const navLinks = [
  { href: "/", label: "Home" },
  { href: "/products", label: "Products" },
  { href: "/youtube", label: "YouTube" },
  { href: "/flying-tips", label: "Flying Tips" },
];
---
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>{title}</title>

  <style>
    /* === Color variables: update once and both themes follow === */
    :root{
      --bg: #fdfdfd;
      --surface: #ffffff;
      --text: #0b0b0b;           /* primary text - darker */
      --muted: #555555;
      --accent: #0077FF;
      --header-bg: rgba(0,0,0,0.04);
      --footer-bg: rgba(0,0,0,0.04);
      --nav-bg: rgba(0,0,0,0.95);
    }

    html.dark{
      --bg: linear-gradient(135deg,#001F3F 0%, #0074D9 100%); /* your dark gradient */
      --surface: rgba(0,0,0,0.7);
      --text: #f0f0f0;
      --muted: #b5b5b5;
      --accent: #FFD700; /* gold for dark mode accents */
      --header-bg: rgba(0,0,0,0.7);
      --footer-bg: rgba(0,0,0,0.7);
      --nav-bg: rgba(0,0,0,0.95);
    }

    /* === Page base === */
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0;
      min-height:100vh;
      font-family: "Segoe UI", system-ui, -apple-system, "Helvetica Neue", Arial;
      background: var(--bg);
      color: var(--text);
      -webkit-font-smoothing:antialiased;
      -moz-osx-font-smoothing:grayscale;
      transition: background .25s ease, color .25s ease;
      display:flex;
      flex-direction:column;
    }

    a{ color: var(--accent); text-decoration:none; transition: color .15s }
    a:hover, a:focus-visible { color: color-mix(in srgb, var(--accent) 75%, black 25%); text-decoration:underline; }

    /* === Header layout: left | centered logo | right === */
    header{
      position: sticky;
      top:0;
      z-index:120;
      display:flex;
      align-items:center;
      justify-content:space-between;
      background: var(--header-bg);
      height:64px;
      padding:0 12px;
      border-bottom: 1px solid rgba(0,0,0,0.04);
    }

    /* Left and right containers fixed width so center stays centered */
    .header-left, .header-right {
      width:56px;              /* reserve equal space */
      display:flex;
      align-items:center;
      justify-content:center;
      flex:0 0 56px;
    }

    /* center logo sits visually centered */
    .header-center {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      display:flex;
      align-items:center;
      justify-content:center;
      pointer-events: none; /* let clicks go through to links if needed */
    }
    .logo-link { pointer-events: auto; display:inline-block; }
    .logo-img { height:44px; display:block; }

    /* === Hamburger === */
    .hamburger {
      background:transparent;
      border:0;
      padding:6px;
      cursor:pointer;
      color: var(--text);
      border-radius:6px;
    }
    .hamburger svg { display:block; }
    .hamburger:focus { outline: none; box-shadow: 0 0 0 3px rgba(0,123,255,0.12); }

    /* === Theme toggle (icon only) === */
    .icon-btn {
      background:transparent;
      border:1px solid currentColor;
      width:40px;
      height:40px;
      border-radius:8px;
      display:inline-flex;
      align-items:center;
      justify-content:center;
      cursor:pointer;
      color: var(--text);
    }
    .icon-btn:focus { outline:none; box-shadow: 0 0 0 3px rgba(255,215,0,0.14); }

    /* nav: off-canvas on mobile, inline on desktop */
    nav {
      position: fixed;
      top:64px;
      left:0;
      width:240px;
      height: calc(100% - 64px);
      background: var(--nav-bg);
      padding: 20px;
      transform: translateX(-100%);
      transition: transform .28s ease;
      z-index:115;
    }
    nav.open { transform: translateX(0); }
    nav a {
      display:block;
      color: var(--accent);
      margin-bottom: 12px;
      font-weight:600;
    }

    /* Desktop: show nav as inline row inside header (and hide off-canvas) */
    @media(min-width: 768px){
      nav {
        position: static;
        transform:none !important;
        height:auto;
        background:transparent;
        padding:0;
        display:flex;
        gap:18px;
        align-items:center;
      }
      nav a { color: inherit; margin:0; font-weight:600; }
    }

    main{
      flex:1;
      max-width:1180px;
      margin: 28px auto;
      padding: 0 18px;
      width:100%;
      box-sizing:border-box;
    }

    footer{
      background: var(--footer-bg);
      padding: 18px;
      text-align:center;
      color: var(--muted);
      font-size:0.95rem;
    }

    /* small responsive tweaks */
    @media(max-width:420px){
      .logo-img { height:36px; }
    }
  </style>
</head>
<body>
  <header>
    <!-- Left: hamburger -->
    <div class="header-left">
      <button class="hamburger" id="hamburger-button" aria-label="Open menu" aria-expanded="false" type="button">
        <!-- simple hamburger svg -->
        <svg width="20" height="14" viewBox="0 0 20 14" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <rect width="20" height="2" rx="1" y="0" fill="currentColor"></rect>
          <rect width="20" height="2" rx="1" y="6" fill="currentColor"></rect>
          <rect width="20" height="2" rx="1" y="12" fill="currentColor"></rect>
        </svg>
      </button>
    </div>

    <!-- Center: visually centered logo -->
    <div class="header-center">
      <a class="logo-link" href="/" aria-label="Fly8G home">
        <img class="logo-img" src="/logo.jpg" alt="Fly8G Logo" />
      </a>
    </div>

    <!-- Right: small theme icon -->
    <div class="header-right">
      <button id="theme-toggle" class="icon-btn" aria-pressed="false" aria-label="Toggle dark mode" title="Toggle dark mode">
        <!-- placeholder icon - will be replaced by JS based on current theme -->
        <svg id="theme-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <path d="M12 3v2M12 19v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"/>
          <circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="1.6"/>
        </svg>
      </button>
    </div>

    <!-- Off-canvas nav (mobile) / inline nav (desktop) -->
    <nav id="nav-menu" aria-label="Primary Navigation">
      {navLinks.map(({ href, label }) => (
        <a href={href} tabindex="0">{label}</a>
      ))}
    </nav>
  </header>

  <main>
    <slot />
  </main>

  <footer>
    &copy; {new Date().getFullYear()} Fly8G â€” contact@fly8g.com
  </footer>

  <script>
    // ===== Small utility icons (SVG strings) =====
    const sunSVG = '<svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true"><circle cx="12" cy="12" r="4" stroke="currentColor" stroke-width="1.6"/><path d="M12 2v2M12 20v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"/></svg>';
    const moonSVG = '<svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true"><path d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"/></svg>';

    // ===== Hamburger toggle =====
    const hamburger = document.getElementById('hamburger-button');
    const navMenu = document.getElementById('nav-menu');
    hamburger.addEventListener('click', () => {
      const expanded = hamburger.getAttribute('aria-expanded') === 'true';
      hamburger.setAttribute('aria-expanded', String(!expanded));
      hamburger.classList.toggle('open');
      navMenu.classList.toggle('open');
    });

    // ===== Theme toggle: uses <html>.dark and localStorage =====
    const htmlEl = document.documentElement;
    const themeToggle = document.getElementById('theme-toggle');
    const themeIcon = document.getElementById('theme-icon');

    function setIcon(isDark){
      // replace inner svg inside button
      themeIcon.parentNode.innerHTML = isDark ? moonSVG : sunSVG;
      // set aria-pressed
      themeToggle.setAttribute('aria-pressed', String(isDark));
    }

    function applyThemeFromStorage(){
      const saved = localStorage.getItem('theme');
      if(saved === 'dark') {
        htmlEl.classList.add('dark');
        setIcon(true);
      } else if (saved === 'light') {
        htmlEl.classList.remove('dark');
        setIcon(false);
      } else {
        // follow system preference if no saved setting
        const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
        htmlEl.classList.toggle('dark', prefersDark);
        setIcon(prefersDark);
      }
    }

    applyThemeFromStorage();

    themeToggle.addEventListener('click', () => {
      const isDark = htmlEl.classList.toggle('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
      setIcon(isDark);
    });

    // ensure keyboard support: Enter/Space toggle
    themeToggle.addEventListener('keydown', (e) => {
      if(e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        themeToggle.click();
      }
    });
  </script>
</body>
</html>
