---
const { title = "Fly8G" } = Astro.props;
const navLinks = [
  { href: "/", label: "Home" },
  { href: "/products", label: "Products" },
  { href: "/youtube", label: "YouTube" },
  { href: "/flying-tips", label: "Flying Tips" },
];
---

<!DOCTYPE html>
<html lang="en" class="">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{title}</title>
  <style>
    *, *::before, *::after {
      box-sizing: border-box;
    }

    :root {
      --bg: linear-gradient(135deg, #f9fafb 0%, #e5e7eb 100%);
      --surface: #ffffff;
      --text: #1a1a1a;
      --muted: #555555;
      --accent: #0077FF;
      --header-bg: rgba(255, 255, 255, 0.9);
      --footer-bg: rgba(245, 245, 245, 0.9);
      --nav-bg: rgba(255, 255, 255, 0.98);
    }

    html.dark {
      --bg: linear-gradient(135deg, #001F3F 0%, #0074D9 100%);
      --surface: rgba(0, 0, 0, 0.7);
      --text: #f0f0f0;
      --muted: #b5b5b5;
      --accent: #FFD700;
      --header-bg: rgba(0, 0, 0, 0.7);
      --footer-bg: rgba(0, 0, 0, 0.7);
      --nav-bg: rgba(0, 0, 0, 0.95);
    }

    body {
      background: var(--bg);
      color: var(--text);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      transition: background 0.3s ease, color 0.3s ease;
      margin: 0;
      padding: 0;
    }

    /* Global link styles */
    a {
      color: var(--accent);
      text-decoration: none;
      transition: color 0.2s ease;
    }
    a:hover,
    a:focus-visible {
      color: var(--accent);
      text-decoration: underline;
      outline: none;
    }

    /* Main content */
    main a {
      color: var(--accent);
      text-decoration: none;
      transition: color 0.2s ease;
    }
    main a:hover,
    main a:focus-visible {
      color: var(--accent);
      text-decoration: underline;
      outline: none;
    }
    main p, main ul, main ol {
      line-height: 1.6;
      margin-bottom: 1rem;
      color: var(--text);
    }
    main h1, main h2, main h3, main h4, main h5, main h6 {
      color: var(--accent);
      margin-top: 2rem;
      margin-bottom: 1rem;
      font-weight: 700;
    }

    header {
      background: var(--header-bg);
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 1rem;
      position: sticky;
      top: 0;
      height: 60px;
      z-index: 100;
    }

    /* Hamburger Button */
    .hamburger {
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      width: 28px;
      height: 22px;
      cursor: pointer;
      z-index: 110;
      background: transparent;
      border: none;
      padding: 0;
    }

    .hamburger div {
      width: 28px;
      height: 3px;
      background: var(--text);
      border-radius: 2px;
      transition: all 0.3s ease;
    }

    /* Toggle Hamburger animation when open */
    .hamburger.open div:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }
    .hamburger.open div:nth-child(2) {
      opacity: 0;
    }
    .hamburger.open div:nth-child(3) {
      transform: rotate(-45deg) translate(6px, -6px);
    }

    /* Focus style for accessibility */
    .hamburger:focus {
      outline: none;
      box-shadow: 0 0 0 3px #FFDC00;
      border-radius: 4px;
    }

    /* Logo */
    .logo {
      flex: 1;
      text-align: center;
    }

    .logo img {
      height: 40px;
      cursor: pointer;
      user-select: none;
    }

    /* Navigation */
    nav {
      position: fixed;
      top: 60px;
      left: 0;
      width: 220px;
      height: calc(100% - 60px);
      background: var(--nav-bg);
      padding: 2rem 1rem;
      transform: translateX(-100%);
      transition: transform 0.3s ease;
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
      z-index: 105;
    }

    nav.open {
      transform: translateX(0);
    }

    nav a {
      color: var(--accent);
      font-weight: 600;
      text-decoration: none;
      font-size: 1.2rem;
      user-select: none;
      outline-offset: 2px;
      transition: color 0.2s ease;
    }

    nav a:hover,
    nav a:focus-visible {
      color: var(--accent);
      text-decoration: underline;
      outline: none;
    }

    main {
      flex: 1;
      padding: 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    footer {
      background: var(--footer-bg);
      text-align: center;
      padding: 1rem 2rem;
      color: var(--muted);
      font-size: 0.9rem;
    }

    /* Dark mode toggle button */
    #dark-mode-toggle {
      background: transparent;
      border: 2px solid var(--accent);
      color: var(--accent);
      padding: 5px 12px;
      border-radius: 5px;
      font-weight: 600;
      cursor: pointer;
      user-select: none;
      transition: background-color 0.3s ease, color 0.3s ease;
      font-size: 0.9rem;
      margin-left: 1rem;
    }
    #dark-mode-toggle:hover,
    #dark-mode-toggle:focus {
      background: var(--accent);
      color: var(--surface);
      outline: none;
    }

    @media (min-width: 768px) {
      /* Show nav as horizontal menu on desktop */
      nav {
        position: static;
        transform: none !important;
        height: auto;
        background: transparent;
        padding: 0;
        flex-direction: row;
        gap: 2rem;
        width: auto;
      }
      .hamburger {
        display: none;
      }
      main {
        padding: 3rem 2rem;
      }
      #dark-mode-toggle {
        margin-left: 0;
        margin-right: 1rem;
      }
    }
  </style>
</head>
<body>
  <header>
    <button
      class="hamburger"
      aria-label="Toggle navigation menu"
      aria-expanded="false"
      aria-controls="nav-menu"
      id="hamburger-button"
      type="button"
    >
      <div></div>
      <div></div>
      <div></div>
    </button>

    <div class="logo">
      <a href="/" tabindex="0">
        <img src="/logo.jpg" alt="Fly8G Logo" />
      </a>
    </div>

    <nav id="nav-menu" aria-label="Primary Navigation">
      {navLinks.map(({ href, label }) => (
        <a href={href} tabindex="0">{label}</a>
      ))}
    </nav>

    <button id="dark-mode-toggle" aria-label="Toggle dark mode">Dark Mode</button>
  </header>

  <main>
    <slot />
  </main>

  <footer>
    &copy; {new Date().getFullYear()} Fly8G &mdash; contact@fly8g.com
  </footer>

  <script>
    const hamburger = document.getElementById('hamburger-button');
    const navMenu = document.getElementById('nav-menu');
    const darkToggle = document.getElementById('dark-mode-toggle');

    // Hamburger menu toggle
    hamburger.addEventListener('click', () => {
      const expanded = hamburger.getAttribute('aria-expanded') === 'true';
      hamburger.setAttribute('aria-expanded', String(!expanded));
      hamburger.classList.toggle('open');
      navMenu.classList.toggle('open');
    });

    // Dark mode toggle
    function updateToggleText() {
      if(document.documentElement.classList.contains('dark')) {
        darkToggle.textContent = 'Light Mode';
      } else {
        darkToggle.textContent = 'Dark Mode';
      }
    }

    darkToggle.addEventListener('click', () => {
      document.documentElement.classList.toggle('dark');
      // Save preference
      if (document.documentElement.classList.contains('dark')) {
        localStorage.setItem('theme', 'dark');
      } else {
        localStorage.setItem('theme', 'light');
      }
      updateToggleText();
    });

    // Initialize based on saved preference or system setting
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
    updateToggleText();
  </script>
</body>
</html>
